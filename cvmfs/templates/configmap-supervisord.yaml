apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cvmfs.fullname" . }}-cfgmap-supervisord-conf
  labels:
    {{- include "cvmfs.labels" . | nindent 4 }}
data:
  supervisord.conf: |
    ; Directives for supervisord
    [supervisord]
    ;logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
    ;logfile_maxbytes=50MB                       ; (max main logfile bytes b4 rotation;default 50MB)
    ;logfile_backups=10                          ; (num of main logfile rotation backups;default 10)
    ;loglevel=info                               ; (log level;default info; others: debug,warn,trace)
    pidfile=/var/run/supervisord.pid             ; (supervisord pidfile;default supervisord.pid)
    nodaemon=true                                ; (start in foreground if true;default false)
    minfds=1024                                  ; (min. avail startup file descriptors;default 1024)
    minprocs=200                                 ; (min. avail process descriptors;default 200)
    ;umask=022                                   ; (process file creation umask;default 022)
    user=root                                    ; (default is current user, required if root)
    ;identifier=supervisor                       ; (supervisord identifier, default is 'supervisor')
    ;directory=/tmp                              ; (default is not to cd during start)
    ;nocleanup=true                              ; (don't clean up tempfiles at start;default false)
    ;childlogdir=/tmp                            ; ('AUTO' child log dir, default $TEMP)
    ;environment=KEY=value                       ; (key value pairs to add to environment)
    ;strip_ansi=false                            ; (strip ansi escape codes in logs; def. false)

    ; Allow using supervisorctl to interact with supervisord
    [unix_http_server]
    file=/var/run/supervisor/supervisor.sock     ; (the path to the socket file)
    ;chmod=0700                                  ; sockef file mode (default 0700)
    ;chown=nobody:nogroup                        ; socket file uid:gid owner
    username=admin                               ; (default is no username (open server))
    password=admin                               ; (default is no password (open server))
    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
    [supervisorctl]
    serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socket
    username=admin                                       ; should be same as http_username if set
    password=admin                                       ; should be same as http_password if set
    ;prompt=mysupervisor                                 ; cmd line prompt (default "supervisor")
    ;history_file=~/.sc_history                          ; use readline history if available

    ; Load additional configuration files
    [include]
    files = /etc/supervisord.d/*.ini

    ; Quit supervisord if one of the processes enters a failed state
    ; i.e., supervisord tried to revive it startretries times unsuccessfully
    [eventlistener:watch_processes]
    command=bash -c "printf 'READY\n' && while read line; do kill -SIGQUIT $PPID; done < /dev/stdin"
    events=PROCESS_STATE_FATAL
---
{{ $uid := (include "mount_uid" . ) }}
{{ $gid := (include "mount_gid" . ) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cvmfs.fullname" . }}-cfgmap-supervisord-procs
  labels:
    {{- include "cvmfs.labels" . | nindent 4 }}
data:
  {{- range .Values.repositories }}

  mount-{{ . }}.ini: |
    [program:cvmfs-{{ . }}]
    command=/bin/bash -c "/usr/bin/umount /cvmfs/{{ . }}; /usr/bin/cvmfs2 -o rw,nodev,_netdev,fsname=cvmfs2,system_mount,allow_other,foreground,uid={{ $uid }},gid={{ $gid }} {{ . }} /cvmfs/{{ . }}"
    startsecs=30
    startretries=5
    autorestart=unexpected
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    ;user=cvmfs
    redirect_stderr=true
    ;stdout_logfile=/var/log/supervisor/cvmfs-{{ . }}.log
    ;stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    stdout_logfile=/dev/fd/1
    stdout_logfile_maxbytes=0
    ;environment=A=1,B=2
  {{- end }}

