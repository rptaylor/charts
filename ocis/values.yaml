replicaCount: 1

image:
  repository: gitlab-registry.cern.ch/sciencebox/docker-images/ocis
  tag: 1.11.0
  pullPolicy: Always

#
# oCIS extensions to be executed in the pod
#
extensions:

#
# Environment variables to set in each container of the pod
#
env:
extraEnv: []

#
# Configuration files for oCIS extensions mounted at /etc/ocis/
#
configFiles:

#
# Storage perisstency configuration
#
persistentVolume:
  # If true, ocis will create/use a Persistent Volume Claim
  # If false, use emptyDir instead
  enabled: false

  # Must match those of existing PV or dynamic provisioner
  # Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  annotations: {}

  # If defined, PVC MUST be created manually before volume will be bound
  existingClaim: ""

  # Mount path inside the container
  mountPath: /var/tmp
  # Subdirectory of the PV to mount. If the root directory is not empty
  subPath: ""
  size: 10Gi

  # If set to "-", storageClassName: "": disables dynamic provisioning
  # If undefined or null, chooses the default provisioner.
  # storageClass: "-"

  # volumeBindingMode: ""

emptyDir:
  sizeLimit: ""

#
# Reserve hardware resource for the pod
#
resources: {}
  # requests:
  #   cpu: 500m
  #   memory: 512Mi
  #   ephemeral-storage: "2Gi"
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  #   ephemeral-storage: "2Gi"

#
# Service ports declaration for oCIS extensions
#
# Example of idp extension:
#   - running on port 9130 -- targetPort is where the extension listens inside the container
#   - exposed on 8080 -- port is where external clients must connect to
#   - type (i.e., service type) is global for all declared services
#
#  services:
#    type: ClusterIP
#    idp:
#      port: 8080
#      targetPort: 9130
#
services:

#
# Ingress configuration
#
# Example of hosts configuration for 'ocis.local' server name:
#   - paths: forwarding paths '/.well-known', '/konnect', '/signin'
#   - pathType: using declared paths as prefixes
#   - backendName: left blank -- the full name of the chart will be used
#   - backendPort: forwarding to port 8080 (which is where the service is exposed)
#
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  hosts:
    ocis-idp.local:
      paths:
      - '/.well-known'
      - '/konnect'
      - '/signin'
      pathType: Prefix
      backendName:
      backendPort: 8080
  tls: []
  #  - secretName: ocis-tls
  #    hosts:
  #      - ocis-idp.local
  grpc: {}
    # annotations: {}
    # hosts:
    #   - api.cernbox.cern.ch
    # tls: []
